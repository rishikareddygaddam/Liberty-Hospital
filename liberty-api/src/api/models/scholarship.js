"use strict";
module.exports = (sequelize, DataTypes) => {
  const Scholarship = sequelize.define(
    "Scholarship",
    {
      firstname: DataTypes.STRING,
      lastname: DataTypes.STRING,
      street: DataTypes.STRING,
      city: DataTypes.STRING,
      state: DataTypes.STRING,
      zip: DataTypes.STRING,
      home_phone: DataTypes.STRING,
      cell: DataTypes.STRING,
      email: DataTypes.STRING,
      birthdate: DataTypes.DATE,
      learn: DataTypes.STRING,
      is_relatives: DataTypes.STRING,
      relatives: DataTypes.STRING,
      guardian1_name: DataTypes.STRING,
      guardian1_street: DataTypes.STRING,
      guardian1_city: DataTypes.STRING,
      guardian1_zip: DataTypes.STRING,
      guardian1_occupation: DataTypes.STRING,
      guardian2_name: DataTypes.STRING,
      guardian2_street: DataTypes.STRING,
      guardian2_city: DataTypes.STRING,
      guardian2_zip: DataTypes.STRING,
      guardian2_occupation: DataTypes.STRING,
      no_of_siblings: DataTypes.INTEGER,
      no_in_college: DataTypes.INTEGER,
      k12: DataTypes.STRING,
      live_with_parents: DataTypes.STRING,
      explain_living: DataTypes.STRING,
      years_on_job: DataTypes.INTEGER,
      place_employment: DataTypes.STRING,
      plan_to_work: DataTypes.STRING,
      hours_week: DataTypes.INTEGER,
      school: DataTypes.STRING,
      school_address: DataTypes.STRING,
      school_year: DataTypes.INTEGER,
      class_rank: DataTypes.INTEGER,
      gpa: DataTypes.FLOAT,
      weighted_gpa: DataTypes.FLOAT,
      act: DataTypes.INTEGER,
      english: DataTypes.INTEGER,
      science: DataTypes.INTEGER,
      math: DataTypes.INTEGER,
      reading: DataTypes.INTEGER,
      composite: DataTypes.INTEGER,
      other_scores: DataTypes.STRING,
      counselor: DataTypes.STRING,
      counselor_phone: DataTypes.STRING,
      colleges_applied: DataTypes.STRING,
      college_planned: DataTypes.STRING,
      accepted_nursing: DataTypes.STRING,
      when_apply: DataTypes.INTEGER,
      field_of_interest: DataTypes.STRING,
      graduate_month: DataTypes.DATE,
      graduate_year: DataTypes.INTEGER,
      college_classes_taken: DataTypes.STRING,
      college_awarded: DataTypes.STRING,
      transcripts: DataTypes.BOOLEAN,
      acceptance: DataTypes.BOOLEAN,
      statement: DataTypes.BOOLEAN,
      recommendation: DataTypes.BOOLEAN,
      transcripts_file: DataTypes.STRING,
      acceptance_file: DataTypes.STRING,
      statement_file: DataTypes.STRING,
      recommendation_file: DataTypes.STRING,
      relatives: DataTypes.STRING,
      g1_state: DataTypes.STRING,
      g2_state: DataTypes.STRING,
      signature: DataTypes.STRING,
      date: DataTypes.DATE,
      status: DataTypes.STRING,
      score: DataTypes.INTEGER,
      comments: DataTypes.STRING,
      user_id: DataTypes.STRING
    },
    {}
  );
  Scholarship.associate = function(models) {
    // associations can be defined here
  };
  return Scholarship;
};
